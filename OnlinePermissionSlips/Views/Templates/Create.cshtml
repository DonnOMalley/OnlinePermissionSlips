@model OnlinePermissionSlips.Models.DAL.Template

@{
	ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

<div class="form-horizontal">
	<h4>Template</h4>
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })


	@if (Model.ClassRoom != null)
	{
		@Html.HiddenFor(model => model.SchoolID);
		@Html.HiddenFor(model => model.ClassRoomID);
	}
	else
	{
		<div class="form-group">
			@Html.LabelFor(model => model.SchoolID, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("SchoolID", null, "Select School", htmlAttributes: new { @class = "form-control", @onchange = "javascript:SchoolSelected(this.value);" })
				@Html.ValidationMessageFor(model => model.ClassRoom.SchoolID, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.ClassRoomID, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("ClassRoomID", null, "Select Class Room", htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
				@Html.ValidationMessageFor(model => model.ClassRoomID, "", new { @class = "text-danger" })
			</div>
		</div>
	}

	<div class="form-group">
		@Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.DropDownList("CategoryID", null, "Select Category", htmlAttributes: new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.RequireChaperone, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			<div class="checkbox">
				@Html.EditorFor(model => model.RequireChaperone)
				@Html.ValidationMessageFor(model => model.RequireChaperone, "", new { @class = "text-danger" })
			</div>
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.RequireChaperoneBackgroundCheck, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			<div class="checkbox">
				@Html.EditorFor(model => model.RequireChaperoneBackgroundCheck)
				@Html.ValidationMessageFor(model => model.RequireChaperoneBackgroundCheck, "", new { @class = "text-danger" })
			</div>
		</div>
	</div>

	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<input type="submit" value="Create" class="btn btn-default" />
		</div>
	</div>
</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">

	function SchoolSelected(schoolID) {
		GetClassRoomsForSchool(schoolID, 'ClassRoomID', 'Select Class Room', '/ClassRooms/GetSchoolClasses/');
	}
</script>
}
