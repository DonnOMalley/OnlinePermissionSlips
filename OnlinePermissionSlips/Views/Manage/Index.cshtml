@using OnlinePermissionSlips.Models.DAL;
@model OnlinePermissionSlips.Models.IndexViewModel
@{
	ViewBag.Title = "My Profile";
}

<h2>@ViewBag.Title.</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
<div>
	<h4>Change your account settings</h4>
	<hr />
	<a href="@Url.Action("EditProfile", "Manage")" class="btn btn-primary">Edit Profile <span class="glyphicon glyphicon-edit"></span></a>
	<dl class="dl-horizontal">
		<dt><label class="control-label">Password:</label></dt>
		<dd>
			[
			@if (Model.HasPassword)
			{
				@Html.ActionLink("Change your password", "ChangePassword")
			}
			else
			{
				@Html.ActionLink("Create", "SetPassword")
			}
			]
		</dd>
		@*<dt><label class="control-label">External Logins:</label></dt>
			<dd>
				@Model.Logins.Count [
				@Html.ActionLink("Manage", "ManageLogins") ]
			</dd>*@
		@*
			Phone Numbers can used as a second factor of verification in a two-factor authentication system.

			 See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
					for details on setting up this ASP.NET application to support two-factor authentication using SMS.

			 Uncomment the following block after you have set up two-factor authentication
		*@
		@*
			<dt>Phone Number:</dt>
			<dd>
					@(Model.PhoneNumber ?? "None")
					@if (Model.PhoneNumber != null)
					{
							<br />
							<text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
							using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
							{
									@Html.AntiForgeryToken()
									<text>[<input type="submit" value="Remove" class="btn-link" />]</text>
							}
					}
					else
					{
							<text>[&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber")
					}
			</dd>
			<dt><label class="control-label">Two-Factor Authentication:</label></dt>
			<dd>
					There are no two-factor authentication providers configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
					for details on setting up this ASP.NET application to support two-factor authentication.
				@if (Model.TwoFactor)
					{
							using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
							{
									@Html.AntiForgeryToken()
									<text>Enabled
									<input type="submit" value="Disable" class="btn btn-link" />
									</text>
							}
					}
					else
					{
							using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
							{
									@Html.AntiForgeryToken()
									<text>Disabled
									<input type="submit" value="Enable" class="btn btn-link" />
									</text>
							}
					}
			</dd>
		*@
		<dt><label class="control-label">User Name:</label></dt>
		<dd>@User.Identity.Name</dd>
		<dt>@Html.LabelFor(m => m.FirstName, new { @class = "control-label" }):</dt>
		<dd>@Html.DisplayFor(m => m.FirstName)</dd>
		<dt>@Html.LabelFor(m => m.MiddleName, new { @class = "control-label" }):</dt>
		<dd>@Html.DisplayFor(m => m.MiddleName)</dd>
		<dt>@Html.LabelFor(m => m.LastName, new { @class = "control-label" }):</dt>
		<dd>@Html.DisplayFor(m => m.LastName)</dd>
		<dt>@Html.LabelFor(m => m.Email, new { @class = "control-label" }):</dt>
		<dd>
			@Html.DisplayFor(m => m.Email)
			@if (!Model.IsSubscribed)
			{
				@Html.ActionLink("[Unsubscribed - Click to Resubscribe]", "ResubscribeEmails")
				<p>Email Addresses that are unsubscribed will not receive email notifications at all from this system.</p>
			}
			@if (!Model.EmailConfirmed)
			{<p><b>Email Not Yet Confirmed: @Html.ActionLink("Send Confirmation Email", "SendEmailConfirmation")</b></p>}
		</dd>
		@if (!User.IsInRole("System Admin"))
		{
			<dt>@Html.LabelFor(m => m.Schools, new { @class = "control-label" }):</dt>
			<dd>
				@foreach (var school in Model.Schools)
				{
					@school.SchoolName <br />
				}
			</dd>
		}
		@if (User.IsInRole("Guardian"))
		{
			<dt></dt>
			<dd>

				<br />
				<div class="panel panel-default">
					<div class="panel-heading">
						<a href="@Url.Action("AddStudent", "Manage")" class="pull-right"> Add Student <span class="glyphicon glyphicon-plus-sign"></span></a>

						<h3 class="panel-title">Students (@Model.Students.Count.ToString())</h3>

					</div>
					<div class="panel-body">
						@{
							Student StudentTemplate = new Student();
							StudentTemplate.School = new School();
							int StudentNum = 0;
						}
						<div class="col-md-10">
							<div class="table">
								<div class="row hidden-sm hidden-xs">
									<div class="col-md-3">
										@Html.LabelFor(model => StudentTemplate.FullName)
									</div>
									<div class="col-md-2">
										@Html.LabelFor(model => StudentTemplate.StudentNumber)
									</div>
									<div class="col-md-7">
										@Html.LabelFor(model => StudentTemplate.School.SchoolName)
									</div>
								</div>
								@foreach (Student student in Model.Students)
								{
									if (Model.Students.Count > 1 && StudentNum++ > 0)
									{<hr />}

									<div class="row">
										@{ var RemoveLink = Url.Action("RemoveStudent", "Manage", new { id = student.StudentNumber.ToString() });}
										<div class="col-md-3 col-xs-12 col-sm-12">
											@Html.LabelFor(model => StudentTemplate.FullName, new { @class = "hidden-md hidden-lg" })
											@Html.ActionLink(student.FullName, "Details", "Students", new { id = student.ID }, new { })
										</div>
										<div class="col-md-2 col-xs-12 col-sm-12">
											@Html.LabelFor(model => StudentTemplate.StudentNumber, new { @class = "hidden-md hidden-lg" })
											@Html.DisplayFor(model => student.StudentNumber)
										</div>
										<div class="col-md-3 col-xs-12 col-sm-12">
											@Html.LabelFor(model => student.School.SchoolName, new { @class = "hidden-md hidden-lg" })
											@Html.DisplayFor(model => student.School.SchoolName)
										</div>
										<div class="col-md-2">
											<a href="@RemoveLink" class="btn btn-danger">Remove <span class="glyphicon glyphicon-remove"></span></a>
										</div>
									</div>
								}
							</div>
						</div>
					</div>
				</div>

			</dd>
		}
		else if (User.IsInRole("Teacher"))// || User.IsInRole("School Admin"))
		{
			<dt>@Html.LabelFor(m => m.Classes, new { @class = "control-label" }):</dt>
			<dd>

				[@Html.ActionLink("Add Class", "AddClass", "Manage")] <br />
				@foreach (var classRoom in Model.Classes)
				{
					@classRoom.GetClassName() <br />
				}
			</dd>
		}
	</dl>
</div>
